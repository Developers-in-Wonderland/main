!! 우선 주의 사항!!

[SW만으로만 잡기 어려운 이유]

떨림 보정 알고리즘 원리
 - 바로 전 Frame의 Data와 현재 Frame Data의 관계를 이용하여 Feature가 어디로 이동하는지 검출하여 이동량 만큼의 역방향으로 보정을 해줌으로 안 흔들리는 것처럼 보이는건데 현재는 모터가 너무 흔들려서 Feature 이동량 검출 자체가 불가능함...

그래서 모터 진동을 잡지 못하면 불가능함, 기본적으로 액션캠에도 SW 알고리즘도 있지만 카메라 자체의 진동을 잡는게 훨씬 더 큰 영향을 차지함.

또한 카메라의 Frame per second이 낮으면 각 Frame별로 이동량이 커서 이동량 검출이 불가능함. 그리고 기존에 들어가있는 Center보정 알고리즘도 엄청 떨리는것처럼 보이게됨...

모터 흔들림 개선과 카메라의 Frame 및 해상도 개선이 필요함

카메라가 아무래도 싼 가성비 웹캠이다 보니
성능이 떨어지긴해서 프레임이나 촬영화면 해상도 코드로 키울 수 있긴한데 
카메라 자체 해상도보다 커서 화질이 떨어짐
화면이 더 매끄러워 보이면 화면 흔들릴때 늘어지는 거 조금이라도 잡을 수 있을거 같음
카메라를 바꿔볼까 고려중

[고려중인 카메라]

로지텍 Stream Cam 스트리밍캠: 네이버 가격비교
 - https://naver.me/x4G41xQG

- GoPro HERO11 Black Mini CHDHF-111-FW

# 현재 영상처리 코드

- DNN : 기존에 사용하던 Haar 방식과 달리 직접 학습한 방식으로 사람 얼굴을 검출
밝기 변화나 각도변화에도 더 강한편
단순한 얼굴 탐지뿐만 아니라 + 이것이 얼굴인 지 판별하는 신뢰도 점수와 함께 얼굴을 검출해내므로 더 정확성, 신뢰성 상승
(DNN은 직접 경험으로 쌓아 학습한 내용, Harr은 메뉴얼보고 그대로 처리)

- 칼만 필터 : 위치 + 변화량 값으로 검출 누락 프레임 동안의 이동을 예측
= 끊김과 추적손실 완화

- One Euro Filter :  객체가 움직일 때는 더 민첩하게, 멈출땐 부드럽게 프레임 보정, 시각적 울렁임이나 지연 느낌 최소화, 사용자가 빠르게 움직여다가 멈출 때 어색함 줄이기 

= 칼만이나 One Euro가 없어지면 촬영화면에 나오는 프레임이 좀 더 끊기고 객체의 움직임이 매끄럽지 않아보임

- 중앙 고정 크롭 : 실제 우리가 사용하는 스마트 폰 카메라에서도 영상 촬영의 경우 흔들림 보정이 들어가며 중앙 크롭이 됨
사용자 눈에 노출 되는 화면 품질을 유지 

# 이전 사용 방식
- 현 방식과는 달리 얼굴이 어디를 가든 얼굴 탐지 사각형이 얼굴을 따라
'함께'움직이도록 했었음!
= 그러나 이것은 하드웨어, 로봇팔이 얼굴을 따라 움직일 것이므로 필요 x 
안정성이 떨어진다고 판단
- 고로 얼굴 탐지 사각형은 항상 화면 중앙에 크롭 고정하고 로봇팔이 인식된
얼굴을 따라 움직임

# Meshflow
- 이동량이 많을 경우에는 영상이 이동한걸 아예 찾지를 못해서 문제.. 
모터가 많이 떨려 이동량을 계산하지 못함 -> 작동이 안 됨

# StabNet 딥러닝
- https://github.com/btxviny/StabNet
해당 링크의 영상을 봐도 알 수 있듯 영상 자체의 큰 떨림을 완전히 잡진 x
잔떨림은 보정이 될 수 있으나 화질 역시 함께 떨어짐

# 왜 칼만이랑 One Euro보다 Meshflow, StabNet이 더 고급 알고리즘인데 보정이 안되는 것인가?
= 칼만과 One Eurosms DNN 얼굴 좌표 기반으로 이동량을 측정, 즉 알고리즘 효과가 존재
= Meshflow와 StabNet은 이미지 전체에서의 Feature탐색 변화를 검출하는 것이므로
이미지가 확 이동할 시에 Feature 탐색이 안 됨

# 결론
초기에는 얼굴의 위치가 변하지 않으면 이미지 흔들림이 다 잡힐거라 예상해서 얼굴 탐색 후에 위치 고정 기술을 개발했는데... (칼만, 원유로, 중앙고정크롭)

거의 잡히긴 했지만 기술의 완성도 측에서 좀더 고려해보니, 얼굴 위치 고정하면 수치적으로는 고정 
BUT, 실제 눈으로 봤을 때 화면의 울렁임이 좀 남아있음을 확인함.

그래서 그 울렁임의 원인을 분석해보니 배경이나 이미지 자체의 흔들림 때문인것을 확인하여 이미지 자체의 흔들림은 프레임간의 Feature이동을 보정하면 될거 같아서 논문 탐색해보니 

1. Rulebase(일반) 기반인 Meshflow
2. Deeplearning 기반인 Stabnet

이 두개를 활용하여 보정해보기로 했는데 촬영되는 이미지 자체가 너무 흔들려서 프레임간의 Feature 연관성 검출에 실패하여 안됨..

그래서 고급 카메라로 교체해서 흔들림 자체를 잡고 알고리즘 적용 예정

-----------------------------------------------------------------------

!! 이미지만으로는 거리에 따른 속도 도출이 불가능 
(이미지 상으로 정확한 거리 확인불가)
즉, 얼굴 이동할 때 모터가 없으면 속력을 정확히 잴 수가 없음
지표들의 속력측정은 모터이동과 함께 연동시켜봐야 할 듯 !!

# 지표1 재인식 시간
-  얼굴 검출 결과가 없어지는 순간, 미검출 타이머 시작
- 얼굴 다시 찾은 순간 타이머 중지, 시간 표시

# 지표2 이동 안정 비율
- 프레임 별로 이동량을 계산, 여기서 좌표는 스무딩/크롭이 반영된 좌표임
(실제 사용자가 보는 화면의 안정감을 위해)
- 3초보다 오래 된 항목은 제거하고 3초 동안 표본 중 이동량을 계산
- 가장 최신 비율 화면에 출력

# 지표3 정지 구간 원내 비율
- px 변화폭 값에 따라 우선 사용자의 움직임이 정지 되었다고 판단한 후
- 시간 집계 시작
- 그 구간 동안 원을 표시하며 조건 충족하는 지 계산